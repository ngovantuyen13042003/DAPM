@model DAPM.Models.TbBaiDang

@{
    ViewData["Title"] = "Chỉnh Sửa Bài Đăng";
    Layout = null;
}
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<style>
    .container {
        margin-top: 50px;
    }

    h2 {
        display: flex;
        justify-content: center;
    }

    .btn {
        margin-top: 5px;
    }

    .image-preview-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .image-item {
        position: relative;
        display: inline-block;
    }

        .image-item img {
            max-width: 100px;
            max-height: 100px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .image-item .remove-image {
            position: absolute;
            top: 2px;
            right: 2px;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
        }

    .add-image-button {
        display: inline-block;
        padding: 8px 16px;
        background-color: #98E0FF;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
</style>

<div class="container">
    <h2>@ViewData["Title"]</h2>
    <hr />

    <form method="post" enctype="multipart/form-data" asp-action="Edit">
        <input type="hidden" name="IdBaiDang" value="@Model.IdBaiDang" />
        <div class="form-group">
            <label for="AccountName">Tên Tài Khoản</label>
            <select id="AccountName" name="IdTaiKhoan" class="form-control" required>
                @foreach (var account in ViewBag.IdTaiKhoan as SelectList)
                {
                    <option value="@account.Value" selected="@(account.Value == Model.IdTaiKhoan.ToString())">@account.Text</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="FloodName">Tên Đợt Lũ</label>
            <select id="FloodName" name="IdDotLu" class="form-control" required>
                @foreach (var flood in ViewBag.IdDotLu as SelectList)
                {
                    <option value="@flood.Value" selected="@(flood.Value == Model.IdDotLu.ToString())">@flood.Text</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="Title">Tiêu Đề</label>
            <input type="text" id="Title" name="TieuDe" class="form-control" value="@Model.TieuDe" required>
        </div>
        <div class="form-group">
            <label for="Content">Nội Dung</label>
            <textarea id="Content" name="NoiDung" rows="5" class="form-control" required>@Model.NoiDung</textarea>
        </div>
        <div class="form-group">
            <label for="PostDate">Ngày Đăng</label>
            <input type="date" id="PostDate" name="NgayDang" class="form-control" value="@Model.NgayDang?.ToString("yyyy-MM-dd")" required>
        </div>
        <div class="form-group">
            <label>Hình Ảnh (tối đa 3)</label>
            <div class="image-preview-container" id="imagePreviewContainer">
                @foreach (var image in Model.TbHinhAnhs)
                {
                    <div class="image-item" data-id="@image.IdHinhAnh">
                        <img src="@Url.Content("~" + image.UrlHinhAnh)" alt="Image" />
                        <button type="button" class="btn btn-danger btn-sm remove-image" data-id="@image.IdHinhAnh">&times;</button>
                        <input type="hidden" name="ExistingImages" value="@image.IdHinhAnh" />
                    </div>
                }
            </div>
            <input type="file" id="imageInput" name="Images" multiple accept="image/*" style="display: none;">
            <button type="button" class="btn btn-primary add-image-button" id="addImageButton">Thêm Hình Ảnh</button>
        </div>
        <div class="btn">
            <button type="submit" class="btn btn-primary">Lưu</button>
            <button type="button" class="btn btn-secondary" onclick="window.history.back();">Hủy</button>
        </div>
    </form>
</div>

<script>
    const imageInput = document.getElementById('imageInput');
    const addImageButton = document.getElementById('addImageButton');
    const imagePreviewContainer = document.getElementById('imagePreviewContainer');

    addImageButton.addEventListener('click', () => {
        imageInput.click();
    });

    imageInput.addEventListener('change', () => {
        const files = Array.from(imageInput.files);
        if (imagePreviewContainer.children.length + files.length > 3) {
            alert('Bạn có thể tải lên tối đa 3 hình ảnh.');
            imageInput.value = ''; // Clear the input
            return;
        }
        files.forEach(file => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const div = document.createElement('div');
                div.classList.add('image-item');
                div.innerHTML = `
                        <img src="${e.target.result}" alt="Image" />
                        <button type="button" class="btn btn-danger btn-sm remove-image">&times;</button>
                    `;
                imagePreviewContainer.appendChild(div);
                div.querySelector('.remove-image').addEventListener('click', () => {
                    div.remove();
                });
            };
            reader.readAsDataURL(file);
        });
    });

    // Logic to remove existing images
    document.querySelectorAll('.remove-image').forEach(button => {
        button.addEventListener('click', (event) => {
            const id = event.target.getAttribute('data-id');
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'DeletedImages';
            input.value = id;
            event.target.parentNode.remove();
            document.forms[0].appendChild(input);
        });
    });
</script>
